// GENERATED BY number_generate.go; DO NOT EDIT!

package flows

import "math"


// Less returns true if the number is smaller than the argument
func (a Signed32) Less(b Number) bool {
	return a < b.(Signed32);
}
// ToFloat returns the number converted to float64
func (a Signed32) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Signed32) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Signed32) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Signed32) Add(b Number) Number {
	return a + b.(Signed32);
}
// Multiplies numbers and return result
func (a Signed32) Multiply(b Number) Number {
	return a * b.(Signed32);
}
// Divides numbers and return result
func (a Signed32) Divide(b Number) Number {
	return a / b.(Signed32);
}
// Greater returns true if the number is greater than the argument
func (a Signed32) Greater(b Number) bool {
	return a > b.(Signed32);
}
// ToUint returns the number converted to uint64
func (a Signed32) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Unsigned8) Less(b Number) bool {
	return a < b.(Unsigned8);
}
// ToFloat returns the number converted to float64
func (a Unsigned8) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Unsigned8) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Unsigned8) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Unsigned8) Add(b Number) Number {
	return a + b.(Unsigned8);
}
// Multiplies numbers and return result
func (a Unsigned8) Multiply(b Number) Number {
	return a * b.(Unsigned8);
}
// Divides numbers and return result
func (a Unsigned8) Divide(b Number) Number {
	return a / b.(Unsigned8);
}
// Greater returns true if the number is greater than the argument
func (a Unsigned8) Greater(b Number) bool {
	return a > b.(Unsigned8);
}
// ToUint returns the number converted to uint64
func (a Unsigned8) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Unsigned32) Less(b Number) bool {
	return a < b.(Unsigned32);
}
// ToFloat returns the number converted to float64
func (a Unsigned32) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Unsigned32) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Unsigned32) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Unsigned32) Add(b Number) Number {
	return a + b.(Unsigned32);
}
// Multiplies numbers and return result
func (a Unsigned32) Multiply(b Number) Number {
	return a * b.(Unsigned32);
}
// Divides numbers and return result
func (a Unsigned32) Divide(b Number) Number {
	return a / b.(Unsigned32);
}
// Greater returns true if the number is greater than the argument
func (a Unsigned32) Greater(b Number) bool {
	return a > b.(Unsigned32);
}
// ToUint returns the number converted to uint64
func (a Unsigned32) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Float64) Less(b Number) bool {
	return a < b.(Float64);
}
// ToFloat returns the number converted to float64
func (a Float64) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Float64) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Float64) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Float64) Add(b Number) Number {
	return a + b.(Float64);
}
// Multiplies numbers and return result
func (a Float64) Multiply(b Number) Number {
	return a * b.(Float64);
}
// Divides numbers and return result
func (a Float64) Divide(b Number) Number {
	return a / b.(Float64);
}
// Greater returns true if the number is greater than the argument
func (a Float64) Greater(b Number) bool {
	return a > b.(Float64);
}
// ToUint returns the number converted to uint64
func (a Float64) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Unsigned16) Less(b Number) bool {
	return a < b.(Unsigned16);
}
// ToFloat returns the number converted to float64
func (a Unsigned16) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Unsigned16) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Unsigned16) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Unsigned16) Add(b Number) Number {
	return a + b.(Unsigned16);
}
// Multiplies numbers and return result
func (a Unsigned16) Multiply(b Number) Number {
	return a * b.(Unsigned16);
}
// Divide numbers and return result
func (a Unsigned16) Divide(b Number) Number {
	return a / b.(Unsigned16);
}
// Greater returns true if the number is greater than the argument
func (a Unsigned16) Greater(b Number) bool {
	return a > b.(Unsigned16);
}
// ToUint returns the number converted to uint64
func (a Unsigned16) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Signed64) Less(b Number) bool {
	return a < b.(Signed64);
}
// ToFloat returns the number converted to float64
func (a Signed64) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Signed64) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Signed64) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Signed64) Add(b Number) Number {
	return a + b.(Signed64);
}
// Multiplies numbers and return result
func (a Signed64) Multiply(b Number) Number {
	return a * b.(Signed64);
}
// Divides numbers and return result
func (a Signed64) Divide(b Number) Number {
	return a / b.(Signed64);
}
// Greater returns true if the number is greater than the argument
func (a Signed64) Greater(b Number) bool {
	return a > b.(Signed64);
}
// ToUint returns the number converted to uint64
func (a Signed64) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Signed8) Less(b Number) bool {
	return a < b.(Signed8);
}
// ToFloat returns the number converted to float64
func (a Signed8) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Signed8) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Signed8) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Signed8) Add(b Number) Number {
	return a + b.(Signed8);
}
// Multiplies numbers and return result
func (a Signed8) Multiply(b Number) Number {
	return a * b.(Signed8);
}
// Divides numbers and return result
func (a Signed8) Divide(b Number) Number {
	return a / b.(Signed8);
}
// Greater returns true if the number is greater than the argument
func (a Signed8) Greater(b Number) bool {
	return a > b.(Signed8);
}
// ToUint returns the number converted to uint64
func (a Signed8) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Float32) Less(b Number) bool {
	return a < b.(Float32);
}
// ToFloat returns the number converted to float64
func (a Float32) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Float32) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Float32) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Float32) Add(b Number) Number {
	return a + b.(Float32);
}
// Multiplies numbers and return result
func (a Float32) Multiply(b Number) Number {
	return a * b.(Float32);
}
// Divide numbers and return result
func (a Float32) Divide(b Number) Number {
	return a / b.(Float32);
}
// Greater returns true if the number is greater than the argument
func (a Float32) Greater(b Number) bool {
	return a > b.(Float32);
}
// ToUint returns the number converted to uint64
func (a Float32) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Unsigned64) Less(b Number) bool {
	return a < b.(Unsigned64);
}
// ToFloat returns the number converted to float64
func (a Unsigned64) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Unsigned64) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Unsigned64) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Unsigned64) Add(b Number) Number {
	return a + b.(Unsigned64);
}
// Multiplies numbers and return result
func (a Unsigned64) Multiply(b Number) Number {
	return a * b.(Unsigned64);
}
// Divides numbers and return result
func (a Unsigned64) Divide(b Number) Number {
	return a / b.(Unsigned64);
}
// Greater returns true if the number is greater than the argument
func (a Unsigned64) Greater(b Number) bool {
	return a > b.(Unsigned64);
}
// ToUint returns the number converted to uint64
func (a Unsigned64) ToUint() uint64 {
	return uint64(a);
}
// Less returns true if the number is smaller than the argument
func (a Signed16) Less(b Number) bool {
	return a < b.(Signed16);
}
// ToFloat returns the number converted to float64
func (a Signed16) ToFloat() float64 {
	return float64(a);
}
// Log returns log(number)
func (a Signed16) Log() Number {
	return Float64(math.Log(float64(a)));
}
// ToInt returns the number converted to int64
func (a Signed16) ToInt() int64 {
	return int64(a);
}
// Add numbers and return result
func (a Signed16) Add(b Number) Number {
	return a + b.(Signed16);
}
// Multiplies numbers and return result
func (a Signed16) Multiply(b Number) Number {
	return a * b.(Signed16);
}
// Divides numbers and return result
func (a Signed16) Divide(b Number) Number {
	return a / b.(Signed16);
}
// Greater returns true if the number is greater than the argument
func (a Signed16) Greater(b Number) bool {
	return a > b.(Signed16);
}
// ToUint returns the number converted to uint64
func (a Signed16) ToUint() uint64 {
	return uint64(a);
}

